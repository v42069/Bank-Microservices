spring:
  application:
    name: gatewayserver
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"

  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 1000
        response-timeout: 2s
      discovery:
        locator:
          lowerCaseServiceId: true
          enabled: false
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"
  datasource:
    url: jdbc:h2:mem:accountsdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  sql:
    init:
      mode: always
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

info:
  app:
    name: gatewayserver
    description: gatewayserver ms
    version: 1.0

management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true
      
      
logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
  level:
    com:
      v:
        gatewayserver: INFO
        
      
keycloak:
  client-id: v-callcenter-CC
  client-secret: BC3Ty1ZSgKdk4fBLzxtObg3RmHCc6fD5
  token-url: http://localhost:7080/realms/master/protocol/openid-connect/token


resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 4
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000